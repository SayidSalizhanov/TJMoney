### Variables
@baseUrl = http://localhost:8080
@authToken = your_jwt_token_here

### Authentication

### Login
POST {{baseUrl}}/api/auth/login
Content-Type: application/json

{
    "username": "testuser",
    "password": "password123"
}

### Register
POST {{baseUrl}}/api/auth/register
Content-Type: application/json

{
    "username": "newuser",
    "email": "newuser@mail.ru",
    "password": "password123"
}

### Logout
POST {{baseUrl}}/api/auth/logout
Authorization: Bearer {{authToken}}

### Get User ID
GET {{baseUrl}}/api/auth/userId
Authorization: Bearer {{authToken}}

### User Profile

### Get User Settings
GET {{baseUrl}}/api/users/settings
Authorization: Bearer {{authToken}}

### Update User Settings
PUT {{baseUrl}}/api/users/settings
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "username": "updated_username",
    "email": "updated@mail.ru"
}

### Delete User
DELETE {{baseUrl}}/api/users
Authorization: Bearer {{authToken}}

### Get User Groups
GET {{baseUrl}}/api/users/groups
Authorization: Bearer {{authToken}}

### Get User Applications
GET {{baseUrl}}/api/users/applications
Authorization: Bearer {{authToken}}

### Delete User Application
DELETE {{baseUrl}}/api/users/applications/1
Authorization: Bearer {{authToken}}

### Change Password
PUT {{baseUrl}}/api/users/password
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "currentPassword": "oldpassword",
    "newPassword": "newpassword123"
}

### Get User Avatar
GET {{baseUrl}}/api/users/avatar
Authorization: Bearer {{authToken}}

### Change Avatar
PUT {{baseUrl}}/api/users/avatar
Authorization: Bearer {{authToken}}
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary

------WebKitFormBoundary
Content-Disposition: form-data; name="avatarImage"; filename="avatar.jpg"
Content-Type: image/jpeg

< ./avatar.jpg
------WebKitFormBoundary--

### Delete Avatar
DELETE {{baseUrl}}/api/users/avatar
Authorization: Bearer {{authToken}}

### Get User Profile
GET {{baseUrl}}/api/users/profile?period=week
Authorization: Bearer {{authToken}}

### Check Admin Status
GET {{baseUrl}}/api/users/admin/check
Authorization: Bearer {{authToken}}

### Groups

### Get Available Groups
GET {{baseUrl}}/api/groups/available?page=0&amount_per_page=10
Authorization: Bearer {{authToken}}

### Create Application to Group
POST {{baseUrl}}/api/groups/1/apply
Authorization: Bearer {{authToken}}

### Get Group Profile
GET {{baseUrl}}/api/groups/1?period=week
Authorization: Bearer {{authToken}}

### Leave Group
POST {{baseUrl}}/api/groups/1/leave
Authorization: Bearer {{authToken}}

### Get Group Settings
GET {{baseUrl}}/api/groups/1/settings
Authorization: Bearer {{authToken}}

### Update Group Settings
PUT {{baseUrl}}/api/groups/1/settings
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "name": "Updated Group",
    "description": "Updated description"
}

### Delete Group
DELETE {{baseUrl}}/api/groups/1
Authorization: Bearer {{authToken}}

### Get Group View
GET {{baseUrl}}/api/groups/1/view
Authorization: Bearer {{authToken}}

### Goals

### Get Goal
GET {{baseUrl}}/api/goals/1
Authorization: Bearer {{authToken}}

### Update Goal
PUT {{baseUrl}}/api/goals/1
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "name": "Updated Goal",
    "description": "Updated description",
    "targetAmount": 1000.0,
    "deadline": "2024-12-31"
}

### Delete Goal
DELETE {{baseUrl}}/api/goals/1
Authorization: Bearer {{authToken}}

### Get Goals
GET {{baseUrl}}/api/goals?groupId=1&page=0&amount_per_page=10
Authorization: Bearer {{authToken}}

### Create Goal
POST {{baseUrl}}/api/goals/new?groupId=1
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "name": "New Goal",
    "description": "Goal description",
    "targetAmount": 500.0,
    "deadline": "2024-12-31"
}

### Records

### Get Record
GET {{baseUrl}}/api/records/1
Authorization: Bearer {{authToken}}

### Update Record
PUT {{baseUrl}}/api/records/1
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "title": "Updated Record",
    "content": "Updated content"
}

### Delete Record
DELETE {{baseUrl}}/api/records/1
Authorization: Bearer {{authToken}}

### Get Records
GET {{baseUrl}}/api/records?groupId=1&page=0&amount_per_page=10
Authorization: Bearer {{authToken}}

### Create Record
POST {{baseUrl}}/api/records/new?groupId=1
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "title": "New Record",
    "content": "Record content"
}

### Reminders

### Get Reminder
GET {{baseUrl}}/api/reminders/1
Authorization: Bearer {{authToken}}

### Update Reminder
PUT {{baseUrl}}/api/reminders/1
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "title": "Updated Reminder",
    "description": "Updated description",
    "reminderTime": "2024-03-20T15:00:00"
}

### Delete Reminder
DELETE {{baseUrl}}/api/reminders/1
Authorization: Bearer {{authToken}}

### Get Reminders
GET {{baseUrl}}/api/reminders?groupId=1&page=0&amount_per_page=10
Authorization: Bearer {{authToken}}

### Create Reminder
POST {{baseUrl}}/api/reminders/new?groupId=1
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "title": "New Reminder",
    "description": "Reminder description",
    "reminderTime": "2024-03-20T15:00:00"
}

### Transactions

### Get Transaction
GET {{baseUrl}}/api/transactions/1
Authorization: Bearer {{authToken}}

### Update Transaction
PUT {{baseUrl}}/api/transactions/1
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "amount": 100.0,
    "description": "Updated transaction",
    "category": "FOOD"
}

### Delete Transaction
DELETE {{baseUrl}}/api/transactions/1
Authorization: Bearer {{authToken}}

### Get Transactions
GET {{baseUrl}}/api/transactions?groupId=1&page=0&amount_per_page=10
Authorization: Bearer {{authToken}}

### Create Transaction
POST {{baseUrl}}/api/transactions/new?groupId=1
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "amount": 50.0,
    "description": "New transaction",
    "category": "FOOD"
}

### Upload CSV Transactions
POST {{baseUrl}}/api/transactions/upload?groupId=1
Authorization: Bearer {{authToken}}
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary

------WebKitFormBoundary
Content-Disposition: form-data; name="csvFile"; filename="transactions.csv"
Content-Type: text/csv

< ./transactions.csv
------WebKitFormBoundary--

### Articles

### Get Articles
GET {{baseUrl}}/api/articles?page=0&amount_per_page=10
Authorization: Bearer {{authToken}}

### Create Article
POST {{baseUrl}}/api/articles
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "title": "New Article",
    "content": "Article content"
}

### Currency

### Get Latest Rates
GET {{baseUrl}}/api/currency/latest?base=USD
Authorization: Bearer {{authToken}}

### Get Specific Rates
GET {{baseUrl}}/api/currency/latest/specific?base=USD&symbols=EUR,GBP
Authorization: Bearer {{authToken}}

### Convert Currency
GET {{baseUrl}}/api/currency/convert?from=USD&to=EUR&amount=100
Authorization: Bearer {{authToken}}

### Chat

### Get Chat Messages
GET {{baseUrl}}/groups/1/chat/messages?limit=30
Authorization: Bearer {{authToken}}

### Products

### Get All Products
GET {{baseUrl}}/api/products
Authorization: Bearer {{authToken}}

### Get Product by ID
GET {{baseUrl}}/api/products/1
Authorization: Bearer {{authToken}}

### Create Product
POST {{baseUrl}}/api/products
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "name": "Test Product",
    "description": "This is a test product",
    "price": 99.99,
    "category": "TEST"
}

### Update Product
PUT {{baseUrl}}/api/products/1
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "name": "Updated Product",
    "description": "This is an updated product",
    "price": 149.99,
    "category": "TEST"
}

### Delete Product
DELETE {{baseUrl}}/api/products/1
Authorization: Bearer {{authToken}}

### Cart

### Get Cart
GET {{baseUrl}}/api/cart
Authorization: Bearer {{authToken}}

### Add to Cart
POST {{baseUrl}}/api/cart/add
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "productId": 1,
    "quantity": 2
}

### Update Cart Item
PUT {{baseUrl}}/api/cart/update
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "productId": 1,
    "quantity": 3
}

### Remove from Cart
DELETE {{baseUrl}}/api/cart/remove/1
Authorization: Bearer {{authToken}}

### Clear Cart
DELETE {{baseUrl}}/api/cart/clear
Authorization: Bearer {{authToken}}

### Orders

### Get All Orders
GET {{baseUrl}}/api/orders
Authorization: Bearer {{authToken}}

### Get Order by ID
GET {{baseUrl}}/api/orders/1
Authorization: Bearer {{authToken}}

### Create Order
POST {{baseUrl}}/api/orders
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "shippingAddress": "123 Test Street, Test City",
    "paymentMethod": "CREDIT_CARD"
}

### Cancel Order
POST {{baseUrl}}/api/orders/1/cancel
Authorization: Bearer {{authToken}}

### Reviews

### Get Product Reviews
GET {{baseUrl}}/api/products/1/reviews
Authorization: Bearer {{authToken}}

### Add Review
POST {{baseUrl}}/api/products/1/reviews
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "rating": 5,
    "comment": "Great product!"
}

### Update Review
PUT {{baseUrl}}/api/products/1/reviews/1
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
    "rating": 4,
    "comment": "Updated review"
}

### Delete Review
DELETE {{baseUrl}}/api/products/1/reviews/1
Authorization: Bearer {{authToken}} 